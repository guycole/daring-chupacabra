#
# front end k8s deployment and service
# kubectl create deployment fw-deploy --image=daring-chupacabra:1 --replicas=1 --namespace=chupacabra --port=80 --dry-run=client -o yaml
#
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: fe-deploy
  name: fe-deploy
  namespace: chupacabra
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fe-deploy
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: fe-deploy
    spec:
      containers:
      - image: daring-chupacabra:1
        name: fe-http
        env:
          - name: BE_CHANNEL
            value: be_channel
          - name: FE_CHANNEL
            value: fe_channel
          - name: RUN_MODE
            value: frontend
          - name: REDIS_ADDRESS
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: REDIS_ADDRESS
                optional: false
          - name: REDIS_PASSWORD
            valueFrom:
              secretKeyRef:
                name: redis-secret
                key: REDIS_PASSWORD
                optional: false
        ports:
        - name: fe-http
          containerPort: 8080
        resources: {}
status: {}
--- 
#
# kubectl create service nodeport fe-deploy -n chupacabra --tcp=80 --dry-run=client -o yaml 
#
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: fe-deploy
  name: fe-deploy
  namespace: chupacabra
spec:
  ports:
  - name: "fe-port"
    port: 8080
    protocol: TCP
    targetPort: fe-http
  selector:
    app: fe-deploy
  type: NodePort
status:
  loadBalancer: {}