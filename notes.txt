https://www.digitalocean.com/community/tutorials/how-to-use-go-modules
https://www.wolfe.id.au/2020/03/10/starting-a-go-project/
https://yalantis.com/blog/how-to-build-websockets-in-go/
https://datatracker.ietf.org/doc/html/rfc6455
https://astaxie.gitbooks.io/build-web-application-with-golang/content/en/02.7.html

https://www.digitalocean.com/community/tutorials/how-to-install-go-on-ubuntu-20-04

https://www.devopsoscar.dev/2017-04-12-deploy-a-static-site-using-an-nginx-docker-container-to-a-local-kubernetes-minikube-instance/

go mod init chupacabra

go run .
go build
go install

https://github.com/gorilla/websocket
https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API


gsc@lingling:445>minikube version
minikube version: v1.26.1
commit: 62e108c3dfdec8029a890ad6d8ef96b6461426dc
gsc@lingling:446>docker -v
Docker version 20.10.5, build 55c4c88

minikube addons enable ingress
minikube addons enable ingress-dns
minikube addons list
minikube service web-deploy -n chupacabra --url

gsc@lingling:394>helm install redis bitnami/redis --values redis-minikube.yaml -n chupacabra
NAME: redis
LAST DEPLOYED: Wed Aug 24 00:24:46 2022
NAMESPACE: chupacabra
STATUS: deployed
REVISION: 1
TEST SUITE: None
NOTES:
CHART NAME: redis
CHART VERSION: 15.6.3
APP VERSION: 6.2.6

** Please be patient while the chart is being deployed **

Redis&trade; can be accessed on the following DNS names from within your cluster:

    redis-master.chupacabra.svc.cluster.local for read/write operations (port 6379)
    redis-replicas.chupacabra.svc.cluster.local for read-only operations (port 6379)



To get your password run:

    export REDIS_PASSWORD=$(kubectl get secret --namespace chupacabra redis-secret -o jsonpath="{.data.redis-password}" | base64 --decode)

To connect to your Redis&trade; server:

1. Run a Redis&trade; pod that you can use as a client:

   kubectl run --namespace chupacabra redis-client --restart='Never'  --env REDISCLI_AUTH=$REDIS_PASSWORD  --image docker.io/bitnami/redis:6.0.16-debian-10-r6 --command -- sleep infinity

   Use the following command to attach to the pod:

   kubectl exec --tty -i redis-client \
   --namespace chupacabra -- bash

2. Connect using the Redis&trade; CLI:
   REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h redis-master
   REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h redis-replicas

To connect to your database from outside the cluster execute the following commands:

    kubectl port-forward --namespace chupacabra svc/redis-master 6379:6379 &
    REDISCLI_AUTH="$REDIS_PASSWORD" redis-cli -h 127.0.0.1 -p 6379
gsc@lingling:395>
